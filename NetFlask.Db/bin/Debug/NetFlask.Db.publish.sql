/*
Deployment script for NetFlask

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "NetFlask"
:setvar DefaultFilePrefix "NetFlask"
:setvar DefaultDataPath "C:\Users\Mike\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Mike\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key be4d9c03-3049-4c69-b0f9-54cc89110b07 is skipped, element [dbo].[Movie].[Id] (SqlSimpleColumn) will not be renamed to IdMovie';


GO
PRINT N'Rename refactoring operation with key e4de1f1b-1dfb-4758-94f9-732151022269 is skipped, element [dbo].[Gender].[Id] (SqlSimpleColumn) will not be renamed to IdGenre';


GO
PRINT N'Rename refactoring operation with key ca8aac81-3e4c-4bc1-82f1-c94a5ef6aefc is skipped, element [dbo].[Director].[Id] (SqlSimpleColumn) will not be renamed to IdDirector';


GO
PRINT N'Rename refactoring operation with key 258da835-acf9-4ec8-bc38-c08ea324a4da is skipped, element [dbo].[Cast].[Id] (SqlSimpleColumn) will not be renamed to IdCast';


GO
PRINT N'Rename refactoring operation with key f6bd00fc-3652-4e86-a443-4d40fc190eed is skipped, element [dbo].[CriticsAuthor].[Id] (SqlSimpleColumn) will not be renamed to IdCriticsAuthor';


GO
PRINT N'Rename refactoring operation with key 0becbaa9-5a98-47eb-bceb-d6ae201f1cb9 is skipped, element [dbo].[Rating].[Id] (SqlSimpleColumn) will not be renamed to IdMovie';


GO
PRINT N'Rename refactoring operation with key bb0f2bf7-1f64-40fe-86ec-59da1a5226d9 is skipped, element [dbo].[User].[Id] (SqlSimpleColumn) will not be renamed to IdUser';


GO
PRINT N'Creating [dbo].[Cast]...';


GO
CREATE TABLE [dbo].[Cast] (
    [IdCast]    INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (MAX) NOT NULL,
    [LastName]  NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([IdCast] ASC)
);


GO
PRINT N'Creating [dbo].[Critics]...';


GO
CREATE TABLE [dbo].[Critics] (
    [IdMovie]         INT        NOT NULL,
    [IdCriticsAuthor] INT        NOT NULL,
    [Score]           FLOAT (53) NOT NULL,
    PRIMARY KEY CLUSTERED ([IdCriticsAuthor] ASC, [IdMovie] ASC)
);


GO
PRINT N'Creating [dbo].[CriticsAuthor]...';


GO
CREATE TABLE [dbo].[CriticsAuthor] (
    [IdCriticsAuthor] INT            IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([IdCriticsAuthor] ASC)
);


GO
PRINT N'Creating [dbo].[Director]...';


GO
CREATE TABLE [dbo].[Director] (
    [IdDirector] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]  NVARCHAR (MAX) NOT NULL,
    [LastName]   NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([IdDirector] ASC)
);


GO
PRINT N'Creating [dbo].[DirectorMovie]...';


GO
CREATE TABLE [dbo].[DirectorMovie] (
    [IdMovie]    INT NOT NULL,
    [IdDirector] INT NOT NULL,
    CONSTRAINT [PK_DirectorMovie] PRIMARY KEY CLUSTERED ([IdMovie] ASC, [IdDirector] ASC)
);


GO
PRINT N'Creating [dbo].[Genre]...';


GO
CREATE TABLE [dbo].[Genre] (
    [IdGenre] INT           IDENTITY (1, 1) NOT NULL,
    [Label]   NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([IdGenre] ASC)
);


GO
PRINT N'Creating [dbo].[Movie]...';


GO
CREATE TABLE [dbo].[Movie] (
    [IdMovie]          INT            IDENTITY (1, 1) NOT NULL,
    [Title]            NVARCHAR (250) NOT NULL,
    [Duration]         INT            NOT NULL,
    [Picture]          NVARCHAR (250) NOT NULL,
    [Trailer]          NVARCHAR (250) NOT NULL,
    [ReleaseDate]      DATE           NOT NULL,
    [Summary]          NVARCHAR (MAX) NOT NULL,
    [ShortDescription] NVARCHAR (30)  NOT NULL,
    PRIMARY KEY CLUSTERED ([IdMovie] ASC)
);


GO
PRINT N'Creating [dbo].[MovieCast]...';


GO
CREATE TABLE [dbo].[MovieCast] (
    [IdCast]  INT NOT NULL,
    [idMovie] INT NOT NULL,
    CONSTRAINT [PK_MovieCast] PRIMARY KEY CLUSTERED ([IdCast] ASC, [idMovie] ASC)
);


GO
PRINT N'Creating [dbo].[MovieGenre]...';


GO
CREATE TABLE [dbo].[MovieGenre] (
    [IdMovie] INT NOT NULL,
    [IdGenre] INT NOT NULL,
    CONSTRAINT [PK_MovieGenre] PRIMARY KEY CLUSTERED ([IdMovie] ASC, [IdGenre] ASC)
);


GO
PRINT N'Creating [dbo].[Rating]...';


GO
CREATE TABLE [dbo].[Rating] (
    [IdMovie]    INT        NOT NULL,
    [IdUser]     INT        NOT NULL,
    [Score]      FLOAT (53) NOT NULL,
    [DateRating] DATE       NOT NULL,
    CONSTRAINT [PK_Rating] PRIMARY KEY CLUSTERED ([IdUser] ASC, [IdMovie] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [IdUser]    INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50) NOT NULL,
    [LastName]  NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([IdUser] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Critics_ToMovie]...';


GO
ALTER TABLE [dbo].[Critics] WITH NOCHECK
    ADD CONSTRAINT [FK_Critics_ToMovie] FOREIGN KEY ([IdMovie]) REFERENCES [dbo].[Movie] ([IdMovie]);


GO
PRINT N'Creating [dbo].[FK_Critics_ToCriticsAuthor]...';


GO
ALTER TABLE [dbo].[Critics] WITH NOCHECK
    ADD CONSTRAINT [FK_Critics_ToCriticsAuthor] FOREIGN KEY ([IdCriticsAuthor]) REFERENCES [dbo].[CriticsAuthor] ([IdCriticsAuthor]);


GO
PRINT N'Creating [dbo].[FK_DirectorMovie_ToMovie]...';


GO
ALTER TABLE [dbo].[DirectorMovie] WITH NOCHECK
    ADD CONSTRAINT [FK_DirectorMovie_ToMovie] FOREIGN KEY ([IdMovie]) REFERENCES [dbo].[Movie] ([IdMovie]);


GO
PRINT N'Creating [dbo].[FK_DirectorMovie_ToDirector]...';


GO
ALTER TABLE [dbo].[DirectorMovie] WITH NOCHECK
    ADD CONSTRAINT [FK_DirectorMovie_ToDirector] FOREIGN KEY ([IdDirector]) REFERENCES [dbo].[Director] ([IdDirector]);


GO
PRINT N'Creating [dbo].[FK_MovieCast_ToMovie]...';


GO
ALTER TABLE [dbo].[MovieCast] WITH NOCHECK
    ADD CONSTRAINT [FK_MovieCast_ToMovie] FOREIGN KEY ([idMovie]) REFERENCES [dbo].[Movie] ([IdMovie]);


GO
PRINT N'Creating [dbo].[FK_MovieCast_ToCast]...';


GO
ALTER TABLE [dbo].[MovieCast] WITH NOCHECK
    ADD CONSTRAINT [FK_MovieCast_ToCast] FOREIGN KEY ([IdCast]) REFERENCES [dbo].[Cast] ([IdCast]);


GO
PRINT N'Creating [dbo].[FK_MovieGenre_ToMovie]...';


GO
ALTER TABLE [dbo].[MovieGenre] WITH NOCHECK
    ADD CONSTRAINT [FK_MovieGenre_ToMovie] FOREIGN KEY ([IdMovie]) REFERENCES [dbo].[Movie] ([IdMovie]);


GO
PRINT N'Creating [dbo].[FK_MovieGenre_ToGenre]...';


GO
ALTER TABLE [dbo].[MovieGenre] WITH NOCHECK
    ADD CONSTRAINT [FK_MovieGenre_ToGenre] FOREIGN KEY ([IdGenre]) REFERENCES [dbo].[Genre] ([IdGenre]);


GO
PRINT N'Creating [dbo].[FK_Rating_ToMovie]...';


GO
ALTER TABLE [dbo].[Rating] WITH NOCHECK
    ADD CONSTRAINT [FK_Rating_ToMovie] FOREIGN KEY ([IdMovie]) REFERENCES [dbo].[Movie] ([IdMovie]);


GO
PRINT N'Creating [dbo].[FK_Rating_ToUser]...';


GO
ALTER TABLE [dbo].[Rating] WITH NOCHECK
    ADD CONSTRAINT [FK_Rating_ToUser] FOREIGN KEY ([IdUser]) REFERENCES [dbo].[User] ([IdUser]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'be4d9c03-3049-4c69-b0f9-54cc89110b07')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('be4d9c03-3049-4c69-b0f9-54cc89110b07')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e4de1f1b-1dfb-4758-94f9-732151022269')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e4de1f1b-1dfb-4758-94f9-732151022269')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ca8aac81-3e4c-4bc1-82f1-c94a5ef6aefc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ca8aac81-3e4c-4bc1-82f1-c94a5ef6aefc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '258da835-acf9-4ec8-bc38-c08ea324a4da')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('258da835-acf9-4ec8-bc38-c08ea324a4da')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f6bd00fc-3652-4e86-a443-4d40fc190eed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f6bd00fc-3652-4e86-a443-4d40fc190eed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0becbaa9-5a98-47eb-bceb-d6ae201f1cb9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0becbaa9-5a98-47eb-bceb-d6ae201f1cb9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bb0f2bf7-1f64-40fe-86ec-59da1a5226d9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bb0f2bf7-1f64-40fe-86ec-59da1a5226d9')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Critics] WITH CHECK CHECK CONSTRAINT [FK_Critics_ToMovie];

ALTER TABLE [dbo].[Critics] WITH CHECK CHECK CONSTRAINT [FK_Critics_ToCriticsAuthor];

ALTER TABLE [dbo].[DirectorMovie] WITH CHECK CHECK CONSTRAINT [FK_DirectorMovie_ToMovie];

ALTER TABLE [dbo].[DirectorMovie] WITH CHECK CHECK CONSTRAINT [FK_DirectorMovie_ToDirector];

ALTER TABLE [dbo].[MovieCast] WITH CHECK CHECK CONSTRAINT [FK_MovieCast_ToMovie];

ALTER TABLE [dbo].[MovieCast] WITH CHECK CHECK CONSTRAINT [FK_MovieCast_ToCast];

ALTER TABLE [dbo].[MovieGenre] WITH CHECK CHECK CONSTRAINT [FK_MovieGenre_ToMovie];

ALTER TABLE [dbo].[MovieGenre] WITH CHECK CHECK CONSTRAINT [FK_MovieGenre_ToGenre];

ALTER TABLE [dbo].[Rating] WITH CHECK CHECK CONSTRAINT [FK_Rating_ToMovie];

ALTER TABLE [dbo].[Rating] WITH CHECK CHECK CONSTRAINT [FK_Rating_ToUser];


GO
PRINT N'Update complete.';


GO
